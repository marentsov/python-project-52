version: '3.8'

services:
  db:
    image: postgres:15-alpine
    env_file: .env.docker
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file: .env.docker
    environment:
      - DOCKER_ENV=yes
    volumes:
      - .:/app
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

    # ☝️ Use an array here to avoid any quoting/folding issues
    command:
      - sh
      - -c
      - |
        python manage.py makemigrations && \
        python manage.py migrate      && \
        exec gunicorn                \
          --capture-output            \
          --error-logfile -           \
          --access-logfile -          \
          --log-level info            \
          -w 5                         \
          -b 0.0.0.0:8082              \
          task_manager.wsgi:application

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge